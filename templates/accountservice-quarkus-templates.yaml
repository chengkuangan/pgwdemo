apiVersion: v1
kind: Template
metadata:
  name: accountbalance-services-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mongodb
  spec:
    ports:
    - name: ${APPLICATION_NAME}-mongodb
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      name: ${APPLICATION_NAME}-mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mongodb
  spec:
    replicas: 1
    selector:
      name: ${APPLICATION_NAME}-mongodb
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}-mongodb
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            value: ${MONGODB_USER}
          - name: MONGODB_PASSWORD
            value: ${MONGODB_PASSWORD}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${MONGODB_ADMIN_PASSWORD}
          - name: MONGODB_DATABASE
            value: ${MONGODB_DATABASE}
          image: mongodb:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 27017
            timeoutSeconds: 300
          name: ${APPLICATION_NAME}-mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 90
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: ${APPLICATION_NAME}-mongodb-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${APPLICATION_NAME}-mongodb-data
          persistentVolumeClaim:
            claimName: ${APPLICATION_NAME}-mongodb
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:${MONGODB_VERSION}
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mongodb
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${MONGODB_VOLUME_CAPACITY}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          #- name: SPRING_DATA_MONGODB_HOST
          - name: QUARKUS_MONGODB_CONNECTION-STRING
            valueFrom:
              configMapKeyRef:
                key: quarkus.mongodb.connection-string
                name: ${APPLICATION_NAME}
          #- name: SPRING_DATA_MONGODB_PORT
          - name: QUARKUS_MONGODB_DATABASE
            valueFrom:
              configMapKeyRef:
                key: quarkus.mongodb.database
                name: ${APPLICATION_NAME}
          #- name: SERVER_PORT
          - name: QUARKUS_HTTP_PORT
            value: ${SERVER_PORT}      
          image: ${APPLICATION_NAME}:latest
          imagePullPolicy: IfNotPresent
          name: ${APPLICATION_NAME}
          resources: {}
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  data:
    quarkus.mongodb.connection-string: ${MONGODB_CONNECTION_STRING}
    quarkus.mongodb.database: ${MONGODB_DATABASE}
  kind: ConfigMap
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      #app: ${APPLICATION_NAME}
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    runPolicy: Serial
    source:
      type: Binary
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ubi-quarkus-native-s2i:19.3.1-java8
          namespace: openshift
      type: Source
- kind: ImageStream
  apiVersion: v1
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}"  
#  spec:
#    tags:
#    - name: "${APPLICATION_NAME}"
#      from:
#        kind: ImageStreamTag
#        name: ${APPLICATION_NAME}:latest
#      importPolicy: {}
#      annotations:
#        description: mservices image tag
#        tags: ${APPLICATION_NAME}
#        version: "latest"  
parameters:
- description: Application Name
  displayName: Application Name
  name: APPLICATION_NAME
  value: accountservice
  required: true
  - description: Database Connection String
  displayName: MongoDB Database Connection String
  name: MONGODB_CONNECTION_STRING
  value: mongodb://accountbalance:accountbalance@accountservice-mongodb:27017/accountbalance
  required: true  
- description: Database Name
  displayName: Database Name
  name: MONGODB_DATABASE
  value: accountbalance
  required: true
- description: Database User
  displayName: Database User
  name: MONGODB_USER
  value: accountbalance
  required: true
- description: Database Password
  displayName: Database Password
  name: MONGODB_PASSWORD
  value: accountbalance
  required: true
- description: Database Admin Password
  displayName: Database Admin Password
  name: MONGODB_ADMIN_PASSWORD
  value: accountbalance
  required: true
- description: Mongodb Version
  displayName: Mongodb Version
  name: MONGODB_VERSION
  value: "3.2"
  required: true
- description: Mongodb Volume Capacity
  displayName: Mongodb Volume Capacity
  name: MONGODB_VOLUME_CAPACITY
  value: 1Gi
  required: true
#- description: Git URL to the source code
#  displayName: Git URL
#  name: SOURCE_REPOSITORY_URL
#  value: https://github.com/chengkuangan/accountbalance.git
#  required: true 
- description: Maven Repo URL
  displayName: Maven Repo URL
  name: MAVEN_MIRROR_URL
  required: false
- description: The default port the service listen at
  displayName: Service Port
  name: SERVER_PORT
  value: "8080"
  required: true  