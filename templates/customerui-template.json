{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "customerui",
        "annotations": {
            "openshift.io/display-name": "Payment Gateway Customer UI",
            "description": "Customer UI components for Payment Gateway.",
            "tags": "payment gateway, customer-ui",
            "iconClass": "icon-nodejs",
            "openshift.io/long-description": "This template deploy Customer UI NodeJs application for OpenShift platform.",
            "openshift.io/provider-display-name": "Gan CK",
            "openshift.io/documentation-url": "https://github.com/chengkuangan/pgwdemo",
            "openshift.io/support-url": "https://github.com/chengkuangan/pgwdemo",
            "template.openshift.io/bindable": "false"
        }
    },
    "message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, see https://github.com/chengkuangan/pgwdemo/README.md",
    "labels": {
        "template": "${NAME}",
        "app": "${NAME}",
        "app-group": "${NAME}"
    },
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "prometheus.io/port": "8080",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app": "${NAME}"
                }
            }
        },
        {
            "kind": "Deployment",
            "apiVersion": "apps/v1",
            "metadata": {
                "name": "${NAME}",
                "labels":{
                    "version": "${APP_VERSION}"
                },
                "annotations": {
                    "description": "Defines how to deploy the application server"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels":{
                        "app": "${NAME}"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "${NAME}",
                        "labels": {
                            "app": "${NAME}",
                            "version": "${APP_VERSION}"
                        },
                        "annotations":{
                            "sidecar.istio.io/inject": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {   
                                "name": "${NAME}",
                                "image": "image-registry.openshift-image-registry.svc:5000/${APP_NAMESPACE}/${NAME}:latest",
                                "ports": [
                                    {
                                        "containerPort": 8080
                                    }
                                ],
                                "readinessProbe": {
                                    "timeoutSeconds": 3,
                                    "initialDelaySeconds": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080
                                    }
                                },
                                "livenessProbe": {
                                    "timeoutSeconds": 3,
                                    "initialDelaySeconds": 30,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 8080
                                    }
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "env": [
                                    {
                                        "name": "CUSTOMER_API_URL",
                                        "value": "${CUSTOMER_API_URL}"
                                    },
                                    {
                                        "name": "CREDIT_API_URL",
                                        "value": "${CREDIT_API_URL}"
                                    },
                                    {
                                        "name": "PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "RHSSO_URL",
                                        "value": "${RHSSO_URL}"
                                    },
                                    {
                                        "name": "PAYMENT_HISTORY_URL",
                                        "value": "${PAYMENT_HISTORY_URL}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        }
    ],
    "parameters": [
        {
            "name": "NAME",
            "displayName": "Name",
            "description": "The name assigned to all of the frontend objects defined in this template.",
            "required": true,
            "value": "customer-ui"
        },
        {
            "name": "NODEJS_VERSION",
            "displayName": "Version of NodeJS Image",
            "description": "Version of NodeJS image to be used (6, 8, or latest).",
            "value": "latest",
            "required": true
        },
        {
            "name": "MEMORY_LIMIT",
            "displayName": "Memory Limit",
            "description": "Maximum amount of memory the container can use.",
            "required": true,
            "value": "512Mi"
        },
        {
            "name": "APPLICATION_DOMAIN",
            "displayName": "Application Hostname",
            "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
            "value": ""
        },
        {
            "name": "NPM_MIRROR",
            "displayName": "Custom NPM Mirror URL",
            "description": "The custom NPM mirror URL"
        },
        {
            "name": "CREDIT_API_URL",
            "displayName": "Credit Service URL",
            "description": "The Credit service complete url with port.",
            "required": true,
            "value": "http://creditservice:8080/ws/pg/credits"
        },
        {
            "name": "CUSTOMER_API_URL",
            "displayName": "Customer Service URL",
            "description": "The Customer service complete url with port. This is the Camel service",
            "required": true,
            "value": "http://customerservice:8080/ws/pg/customer"
        },
        {
            "name": "PAYMENT_HISTORY_URL",
            "displayName": "Customer Service URL",
            "description": "The Customer service complete url with port. This is the Camel service",
            "required": true,
            "value": "http://payment-history-service:8080/payments"
        },
        {
            "name": "RHSSO_URL",
            "displayName": "RHSSO Authentication URL",
            "description": "The RHSSO Authentication URL",
            "required": true
        },
        {
            "name": "APP_NAMESPACE",
            "displayName": "Application namespace",
            "description": "Application namespace",
            "value": "paygate",
            "required": true
        },
        {
            "name": "APP_VERSION",
            "displayName": "Application version",
            "description": "Application version label",
            "value": "v1",
            "required": true
        }
    ]
}