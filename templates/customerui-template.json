{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "customerui",
        "annotations": {
            "openshift.io/display-name": "Node.js",
            "description": "Customer UI for Payment Gateway. ",
            "tags": "payment gateway, customer ui",
            "iconClass": "icon-nodejs",
            "openshift.io/long-description": "This template deploy Customer UI",
            "openshift.io/provider-display-name": "Gan Cheng Kuan",
            "openshift.io/documentation-url": "https://github.com/chengkuangan/customerui.git",
            "openshift.io/support-url": "https://github.com/chengkuangan/customerui.git",
            "template.openshift.io/bindable": "false"
        }
    },
    "message": "The following service(s) have been created in your project: ${NAME}.\n\nFor more information about using this template, including OpenShift considerations, see https://github.com/chengkuangan/customerui/README.md.",
    "labels": {
        "template": "${NAME}",
        "app": "${NAME}"
    },
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Exposes and load balances the application pods",
                    "prometheus.io/port": "8080",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "web",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "${NAME}"
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}"
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "kind": "Service",
                    "name": "${NAME}"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Keeps track of changes in the application image"
                }
            },
            "spec": {
                "output":{
                    "to":{
                        "kind": "ImageStreamTag",
                        "name": "${NAME}"

                    }
                }
            }
        },
        {
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Defines how to build the application",
                    "template.alpha.openshift.io/wait-for-ready": "true"
                }
            },
            "spec": {
                "source": {
                    "type": "Binary"
                },
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${NAMESPACE}",
                            "name": "nodejs:${NODEJS_VERSION}"
                        },
                        "env": [
                            {
                                "name": "NPM_MIRROR",
                                "value": "${NPM_MIRROR}"
                            }
                        ]
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${NAME}:latest"
                    }
                },
                "postCommit": {
                    "script": "npm test"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "${NAME}",
                "annotations": {
                    "description": "Defines how to deploy the application server",
                    "template.alpha.openshift.io/wait-for-ready": "true"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${NAME}"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${NAME}:latest"
                            }
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "name": "${NAME}"
                },
                "template": {
                    "metadata": {
                        "name": "${NAME}",
                        "labels": {
                            "name": "${NAME}"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "${NAME}",
                                "image": " ",
                                "ports": [
                                    {
                                        "containerPort": 8080
                                    }
                                ],
                                "readinessProbe": {
                                    "timeoutSeconds": 3,
                                    "initialDelaySeconds": 3,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8080
                                    }
                                },
                                "livenessProbe": {
                                    "timeoutSeconds": 3,
                                    "initialDelaySeconds": 30,
                                    "httpGet": {
                                        "path": "/",
                                        "port": 8080
                                    }
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "env": [
                                    {
                                        "name": "CUSTOMER_API_URL",
                                        "value": "${CUSTOMER_API_URL}"
                                    },
                                    {
                                        "name": "CREDIT_API_URL",
                                        "value": "${CREDIT_API_URL}"
                                    },
                                    {
                                        "name": "PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "RHSSO_URL",
                                        "value": "${RHSSO_URL}"
                                    }
                                ]
                            }
                        ]
                    }
                }
            }
        }
    ],
    "parameters": [
        {
            "name": "NAME",
            "displayName": "Name",
            "description": "The name assigned to all of the frontend objects defined in this template.",
            "required": true,
            "value": "customer-ui"
        },
        {
            "name": "NAMESPACE",
            "displayName": "Namespace",
            "description": "The OpenShift Namespace where the ImageStream resides.",
            "required": true,
            "value": "openshift"
        },
        {
            "name": "NODEJS_VERSION",
            "displayName": "Version of NodeJS Image",
            "description": "Version of NodeJS image to be used (6, 8, or latest).",
            "value": "latest",
            "required": true
        },
        {
            "name": "MEMORY_LIMIT",
            "displayName": "Memory Limit",
            "description": "Maximum amount of memory the container can use.",
            "required": true,
            "value": "512Mi"
        },
        {
            "name": "APPLICATION_DOMAIN",
            "displayName": "Application Hostname",
            "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
            "value": ""
        },
        {
            "name": "NPM_MIRROR",
            "displayName": "Custom NPM Mirror URL",
            "description": "The custom NPM mirror URL"
        },
        {
            "name": "CREDIT_API_URL",
            "displayName": "Credit Service URL",
            "description": "The Credit service complete url with port.",
            "required": true,
            "value": "http://creditservice:8080/ws/pg/credits"
        },
        {
            "name": "CUSTOMER_API_URL",
            "displayName": "Customer Service URL",
            "description": "The Customer service complete url with port. This is the Camel service",
            "required": true,
            "value": "http://customerservice:8080/ws/pg/customer"
        },
        {
            "name": "RHSSO_URL",
            "displayName": "RHSSO Authentication URL",
            "description": "The RHSSO Authentication URL",
            "required": true
        }
    ]
}